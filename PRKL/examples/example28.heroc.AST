Function print_array
Arguments: 
	Identifier: array
	Identifier: size
Body: 
	Block
		Variable
			Identifier: i
			Type: VariableType.LONG
			Number: 0
		ForExpression
		Initial value: 
			BinaryExpression
			Operation: =
			Left: 
				Identifier: i
			Right: 
				Number: 0
		Condition: 
			BinaryExpression
			Operation: <
			Left: 
				Identifier: i
			Right: 
				Identifier: size
		Step: 
			PostfixExpression
			Operation: ++
			Expression: 
				Identifier: i
		Statement: 
			Block
				IfStatement
				Condition: 
					Identifier: i
				Then: 
					Block
						FunctionCall print_char
						FunctionCall print_char
				FunctionCall print_long
				Arguments: 
					SubscriptExpression
					Expression: 
						Identifier: array
					Inner Expression: 
						Identifier: i
		FunctionCall print_nl
Function swap
Arguments: 
	Identifier: array
	Identifier: i
	Identifier: j
Body: 
	Block
		Variable
			Identifier: foo
			Type: VariableType.LONG
			SubscriptExpression
			Expression: 
				Identifier: array
			Inner Expression: 
				Identifier: i
		BinaryExpression
		Operation: =
		Left: 
			SubscriptExpression
			Expression: 
				Identifier: array
			Inner Expression: 
				Identifier: i
		Right: 
			SubscriptExpression
			Expression: 
				Identifier: array
			Inner Expression: 
				Identifier: j
		BinaryExpression
		Operation: =
		Left: 
			SubscriptExpression
			Expression: 
				Identifier: array
			Inner Expression: 
				Identifier: j
		Right: 
			Identifier: foo
Function partition
Arguments: 
	Identifier: array
	Identifier: p
	Identifier: r
Body: 
	Block
		Variable
			Identifier: j
			Type: VariableType.LONG
			Number: 0
		Variable
			Identifier: x
			Type: VariableType.LONG
			SubscriptExpression
			Expression: 
				Identifier: array
			Inner Expression: 
				Identifier: r
		Variable
			Identifier: i
			Type: VariableType.LONG
			BinaryExpression
			Operation: -
			Left: 
				Identifier: p
			Right: 
				Number: 1
		ForExpression
		Initial value: 
			BinaryExpression
			Operation: =
			Left: 
				Identifier: j
			Right: 
				Identifier: p
		Condition: 
			BinaryExpression
			Operation: <=
			Left: 
				Identifier: j
			Right: 
				BinaryExpression
				Operation: -
				Left: 
					Identifier: r
				Right: 
					Number: 1
		Step: 
			PostfixExpression
			Operation: ++
			Expression: 
				Identifier: j
		Statement: 
			Block
				IfStatement
				Condition: 
					BinaryExpression
					Operation: <=
					Left: 
						SubscriptExpression
						Expression: 
							Identifier: array
						Inner Expression: 
							Identifier: j
					Right: 
						Identifier: x
				Then: 
					Block
						PostfixExpression
						Operation: ++
						Expression: 
							Identifier: i
						FunctionCall swap
						Arguments: 
							Identifier: array
							Identifier: i
							Identifier: j
		FunctionCall swap
		Arguments: 
			Identifier: array
			BinaryExpression
			Operation: +
			Left: 
				Identifier: i
			Right: 
				Number: 1
			Identifier: r
		JumpStatement
		Type: JumpStatementType.RETURN
		Return value: 
			BinaryExpression
			Operation: +
			Left: 
				Identifier: i
			Right: 
				Number: 1
Function quick_sort_rec
Arguments: 
	Identifier: array
	Identifier: p
	Identifier: r
Body: 
	Block
		IfStatement
		Condition: 
			BinaryExpression
			Operation: <
			Left: 
				Identifier: p
			Right: 
				Identifier: r
		Then: 
			Block
				Variable
					Identifier: q
					Type: VariableType.LONG
					FunctionCall partition
					Arguments: 
						Identifier: array
						Identifier: p
						Identifier: r
				FunctionCall quick_sort_rec
				Arguments: 
					Identifier: array
					Identifier: p
					BinaryExpression
					Operation: -
					Left: 
						Identifier: q
					Right: 
						Number: 1
				FunctionCall quick_sort_rec
				Arguments: 
					Identifier: array
					BinaryExpression
					Operation: +
					Left: 
						Identifier: q
					Right: 
						Number: 1
					Identifier: r
Function quick_sort
Arguments: 
	Identifier: array
	Identifier: n
Body: 
	Block
		FunctionCall quick_sort_rec
		Arguments: 
			Identifier: array
			Number: 0
			BinaryExpression
			Operation: -
			Left: 
				Identifier: n
			Right: 
				Number: 1
Function main
Arguments: 
Body: 
	Block
		Variable
			Identifier: a
			Type: VariableType.ARRAY
			Number: 8
			Number: 4
			Number: 2
			Number: 1
			Number: 5
			Number: 2
			Number: 8
			Number: 9
			Number: 3
			Number: 4
			Number: 3
			Number: 2
			Number: 3
			Number: 6
			Number: 4
			Number: 8
			Number: 9
			Number: 2
			Number: 3
			Number: 5
		Variable
			Identifier: b
			Type: VariableType.ARRAY
			Number: 4
			Number: 3
			Number: 4
			Number: 2
			Number: 3
			Number: 3
			Number: 1
			Number: 2
			Number: 4
			Number: 0
			Number: 3
			Number: 4
			Number: 1
			Number: 2
			Number: 4
		Variable
			Identifier: c
			Type: VariableType.ARRAY
			Number: 9
			Number: 8
			Number: 7
			Number: 6
			Number: 5
			Number: 4
			Number: 3
			Number: 2
			Number: 1
			Number: 0
		FunctionCall quick_sort
		Arguments: 
			Identifier: a
			Number: 20
		FunctionCall print_array
		Arguments: 
			Identifier: a
			Number: 20
		FunctionCall quick_sort
		Arguments: 
			Identifier: b
			Number: 15
		FunctionCall print_array
		Arguments: 
			Identifier: b
			Number: 15
		FunctionCall quick_sort
		Arguments: 
			Identifier: c
			Number: 10
		FunctionCall print_array
		Arguments: 
			Identifier: c
			Number: 10