Function main
Arguments: 
Body: 
	Block
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: +
			Left: 
				Number: 10
			Right: 
				BinaryExpression
				Operation: *
				Left: 
					Number: 20
				Right: 
					Number: 30
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: +
			Left: 
				BinaryExpression
				Operation: *
				Left: 
					Number: 10
				Right: 
					Number: 20
			Right: 
				Number: 30
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: <<
			Left: 
				Number: 5
			Right: 
				BinaryExpression
				Operation: +
				Left: 
					Number: 6
				Right: 
					Number: 7
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: +
			Left: 
				Identifier: (5<<6)
			Right: 
				Number: 7
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: >>
			Left: 
				Number: 50000
			Right: 
				BinaryExpression
				Operation: *
				Left: 
					Number: 6
				Right: 
					Number: 2
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: *
			Left: 
				Identifier: (50000>>6)
			Right: 
				Number: 2
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: +
			Left: 
				BinaryExpression
				Operation: %
				Left: 
					Number: 10
				Right: 
					Number: 3
			Right: 
				Number: 1
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: *
			Left: 
				BinaryExpression
				Operation: %
				Left: 
					Number: 10
				Right: 
					Number: 3
			Right: 
				Number: 10
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: %
			Left: 
				BinaryExpression
				Operation: *
				Left: 
					Number: 10
				Right: 
					Number: 10
			Right: 
				Number: 3
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: ==
			Left: 
				BinaryExpression
				Operation: *
				Left: 
					Number: 66
				Right: 
					Number: 10
			Right: 
				Number: 10
		FunctionCall print_nl
		FunctionCall print_long
		Arguments: 
			BinaryExpression
			Operation: *
			Left: 
				Number: 66
			Right: 
				Identifier: (10==10)
		FunctionCall print_nl